{"remainingRequest":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Admin\\simon-game\\simon-game\\src\\components\\pads.vue?vue&type=style&index=0&id=011d8a50&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\src\\components\\pads.vue","mtime":1595690535949},{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Admin\\simon-game\\simon-game\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wYW5lbCB7CiAgICB3aWR0aDogMTUwcHg7CiAgICBoZWlnaHQ6IDE1MHB4OwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgY3Vyc29yOiBwb2ludGVyOwp9Ci5wYW5lbDpob3ZlciB7CiAgICBib3JkZXI6IGJsYWNrIHNvbGlkIDFweDsKfQouYWN0aXZlOmhvdmVyICB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9CgoudG9wLWxlZnQtcGFkIHsKICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE4MHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwp9Ci50b3AtcmlnaHQtcGFkIHsKICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxODBweDsKICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7Cn0KLmJvdHRvbS1sZWZ0LXBhZCB7CiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxODBweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdzsKICAgIAp9Ci5ib3R0b20tcmlnaHQtcGFkIHsKICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxODBweDsKICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOwogICAgCn0K"},{"version":3,"sources":["pads.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"pads.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"pad\" >\r\n        <div :class=\"{'game-container':true,shake: shake, sway}\">\r\n        <div style=\"margin-top: 7px\">\r\n            <div class=\"panel top-left-pad active\" v-on=\"handleTileClick(0)\"></div>\r\n            <div class=\"panel top-right-pad active\" v-on=\"handleTileClick(1)\"></div>\r\n        </div>\r\n        <div>\r\n            <div class=\"panel bottom-left-pad active\" v-on=\"handleTileClick(2)\"></div>\r\n            <div class=\"panel bottom-right-pad active\" v-on=\"handleTileClick(3)\"></div>\r\n        </div>\r\n        <div style=\"margin-top: 15px;\">\r\n            <div v-if=\"gamePlayState==='WON'\">WINNER!</div>\r\n          <button @click=\"handleClickStart\" role=\"button\" type=\"button\" class=\"btn btn-primary\">START</button>\r\n          <button style=\"margin-left: 5px;\" @click=\"handleClickReset\" role=\"button\" type=\"button\" class=\"btn btn-primary\">RESET</button>\r\n        </div>\r\n        <div>Round: {{ round }}</div>\r\n        <div>\r\n          <button :disabled=\"gameState==='RUNNING'\" @change=\"strictMode = $event.value\" /> Strict mode\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nconst playSignalIntervalDelay = [\r\n  1000, 1000, 1000, 1000, 1000,\r\n  800, 800, 800, 800, 800,\r\n  600, 600, 600, 600, 600,\r\n  500, 500, 500, 500, 500\r\n];\r\n\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n      shake: false,\r\n      sway: false,\r\n      round: 0,\r\n      signal: [],\r\n      signalInterval: null,\r\n      repeatIndex: 0,\r\n      gameState: 'INIT',\r\n      gamePlayState: null,\r\n      strictMode: false,\r\n      tileIsLit: [false, false, false, false]\r\n    };\r\n  },\r\n  methods: {\r\n    playWinningTune() {\r\n      this.sway = true;\r\n      setTimeout(() => {\r\n        this.sway = false;\r\n      }, 5000);\r\n      const tuneNotes = [3, 3, 3, 2, 2, 2, 1, 1, 1, 0];\r\n      for (let i = 0, delay = 400; i < tuneNotes.length; i++ , delay += 400) {\r\n        setTimeout(() => {\r\n          this.pressTile(tuneNotes[i]);\r\n        }, delay);\r\n      }\r\n    },\r\n    handleTileClick(tileIndex) {\r\n      // in an ideal world gamePlayState would be computed from signalInterval\r\n      // meh, just easier to manage duplicate state for now\r\n      if (this.gamePlayState === 'PLAY_SIGNAL' || this.gameState !== 'RUNNING') {\r\n        return;\r\n      }\r\n      this.pressTile(tileIndex);\r\n      if (this.gamePlayState === 'WON') {\r\n        // alow user to just play notes until they choose to press reset\r\n        return;\r\n      }\r\n      // check if correct or incorrect click\r\n      if (this.signal[this.repeatIndex] != tileIndex) {\r\n        this.shake = true;\r\n        \r\n        setTimeout(() => {\r\n          this.shake = false;\r\n        }, 500);\r\n        if (this.strictMode) {\r\n          this.handleClickReset();\r\n          this.handleClickStart();\r\n          return;\r\n        }\r\n        return;\r\n      }\r\n      this.repeatIndex++;\r\n      if (this.repeatIndex === this.signal.length) {\r\n        this.round++;\r\n        if (this.round === 20) {\r\n          this.gamePlayState = 'WON';\r\n          setTimeout(() => {\r\n            this.playWinningTune();\r\n          }, 1000);\r\n          return;\r\n        }\r\n        this.playNextLevelSignal();\r\n      }\r\n    },\r\n    pressTile(tileIndex) {\r\n      // this.tileIsLit[tileIndex] = true;\r\n      this.$set(this.tileIsLit, tileIndex, true);\r\n      setTimeout(() => {\r\n        // this.tileIsLit[tileIndex] = false;\r\n        this.$set(this.tileIsLit, tileIndex, false);\r\n      }, 300);\r\n    },\r\n    handleClickStart() {\r\n      this.gameState = 'RUNNING';\r\n      this.playNextLevelSignal();\r\n    },\r\n    playNextLevelSignal() {\r\n      this.signal.push(Math.floor(Math.random() * 4));\r\n      this.playSignal();\r\n    },\r\n    playSignal() {\r\n      this.gamePlayState = 'PLAY_SIGNAL';\r\n      let playIndex = 0;\r\n      setTimeout(() => {\r\n        this.signalInterval = setInterval(() => {\r\n          this.pressTile(this.signal[playIndex]);\r\n          playIndex++;\r\n          if (playIndex === this.signal.length) {\r\n            clearInterval(this.signalInterval);\r\n            this.repeatIndex = 0;\r\n            this.gamePlayState = 'WATCH_REPEAT_SIGNAL';\r\n            return;\r\n          }\r\n        }, playSignalIntervalDelay[this.round]);\r\n      }, 1000);\r\n    },\r\n    handleClickReset() {\r\n      clearInterval(this.signalInterval);\r\n      this.signal = [];\r\n      this.round = 0;\r\n      this.gameState = 'INIT';\r\n      this.gamePlayState = null;\r\n    }\r\n  },\r\n  mounted: function () {\r\n    window.addEventListener('keyup', (event) => {\r\n      if (event.keyCode == 38 || event.keyCode == 87) {\r\n        this.handleTileClick(0);\r\n      }\r\n      if (event.keyCode == 37 || event.keyCode == 65) {\r\n        this.handleTileClick(1);\r\n      }\r\n      if (event.keyCode == 39 || event.keyCode == 68) {\r\n        this.handleTileClick(2);\r\n      }\r\n      if (event.keyCode == 40 || event.keyCode == 83) {\r\n        this.handleTileClick(3);\r\n      }\r\n    });\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .panel {\r\n        width: 150px;\r\n        height: 150px;\r\n        display: inline-block;\r\n        cursor: pointer;\r\n    }\r\n    .panel:hover {\r\n        border: black solid 1px;\r\n    }\r\n    .active:hover  {\r\n        background-color: #fff;\r\n    }\r\n\r\n    .top-left-pad {\r\n        border-top-left-radius: 180px;\r\n        background-color: red;\r\n    }\r\n    .top-right-pad {\r\n        border-top-right-radius: 180px;\r\n        background-color: blue;\r\n    }\r\n    .bottom-left-pad {\r\n        border-bottom-left-radius: 180px;\r\n        background-color: yellow;\r\n        \r\n    }\r\n    .bottom-right-pad {\r\n        border-bottom-right-radius: 180px;\r\n        background-color: green;\r\n        \r\n    }\r\n</style>"]}]}